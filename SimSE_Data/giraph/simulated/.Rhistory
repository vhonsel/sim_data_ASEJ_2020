developers$commits[i] <- sum(developers$commits.committer_id==developers$commits.committer_id[i])
}
dev_stats <- developers[,c(2,3,4,5)]
dev_stats <- unique(dev_stats)
NOC <- nrow(commits)
for (i in 1:nrow(dev_stats)) {
if (dev_stats$commits[i]>=0.02*NOC&dev_stats$commits[i]<0.2*NOC){
dev_stats$role[i]<-"major"
}
else if (dev_stats$commits[i]>=0.2*NOC){
dev_stats$role[i]<-"core"
}
else {
dev_stats$role[i]<-"minor"
}
}
for (j in 1:nrow(dev_stats)) {
dev_stats$roleNOC[j] <- sum(dev_stats$NOC[dev_stats$role==dev_stats$role[j]&dev_stats$month==dev_stats$month[j]])
}
# plot commits per type
print(ggplot(data=dev_stats, aes(x=month, y=roleNOC, group=role, colour=role))
+ geom_line(size=1.5)
+ scale_x_discrete(breaks = c("1998-01","1998-07","1999-01","1999-07","2000-01","2000-07","2001-01","2001-07","2002-01",
"2002-07","2003-01","2003-07","2004-01","2004-07","2005-01","2005-07","2006-01","2006-07",
"2007-01","2007-07","2008-01","2008-07","2009-01","2009-07","2010-01","2010-07","2011-01",
"2011-07","2012-01","2012-07","2013-01","2013-07","2014-01","2014-07","2015-01","2015-07",
"2016-01","2016-07","2017-01","2017-07"))
+ scale_y_continuous("number")
+ theme(text = element_text(size=18),axis.text.x = element_text(hjust = 1, size=18),axis.text.y = element_text(hjust = 1, size=18),
legend.text = element_text(size = 18),legend.title=element_blank())
+ theme(axis.text.x=element_text(angle=-270)))
#}
}
projects = c("accumulo")
#projects = c("zookeeper","xerces2-j","mahout","struts","kafka","cayenne","tika","ant-ivy","opennlp","pig","archiva","accumulo","tez","nutch","deltaspike","storm")
classifiers = c("knn3","rf")
error = data.frame("project"=character(), "classifier"=character(), "mr"=numeric(), stringsAsFactors = FALSE)
project_properties = data.frame("project"=character(), "commits"=numeric(), "ML_dev"=numeric(), "ML_user"=numeric(), stringsAsFactors = FALSE)
hmms_knn <- list()
hmms_rf <- list()
for( projectIndex in 1:length(projects)) {
project_sel = projects[projectIndex]
# perform query on DB to fetch only the selected project
query_str = paste('{"name" : ','"', project_sel,'"}', sep="")
project = con_project$find(query_str, fields='{"_id":1,"name":1}')
print(project)
# use the _id of the project to find the ID of the related version control system
query_str = paste('{"project_id" : {"$oid" : "', project$`_id`[1],'"}}', sep="")
vcssystem = con_vcssystem$find(query_str, fields='{"_id":1, "url":1}')
print(vcssystem)
# fetch all commits for the selected project
query_str = paste('{"vcs_system_id": {"$oid" : "', vcssystem$`_id`[1],'"}}',sep="")
commits = con_commit$find(query_str,fields ='{"_id":1,"author_date":1,"author_id":1,"committer_date":1,"committer_id":1,"labels":1,"linked_issue_ids":1,"message":1}')
# determine developer types
developers <- data.frame(commits$committer_date,commits$committer_id)
for (i in 1:nrow(developers)) {
developers$month[i] <- substr(developers$commits.committer_date[i],1,7)
}
for (i in 1:nrow(developers)) {
developers$NOC[i] <- sum(developers$month==developers$month[i]&developers$commits.committer_id==developers$commits.committer_id[i])
developers$commits[i] <- sum(developers$commits.committer_id==developers$commits.committer_id[i])
}
dev_stats <- developers[,c(2,3,4,5)]
dev_stats <- unique(dev_stats)
NOC <- nrow(commits)
for (i in 1:nrow(dev_stats)) {
if (dev_stats$commits[i]>=0.02*NOC&dev_stats$commits[i]<0.2*NOC){
dev_stats$role[i]<-"major"
}
else if (dev_stats$commits[i]>=0.2*NOC){
dev_stats$role[i]<-"core"
}
else {
dev_stats$role[i]<-"minor"
}
}
for (j in 1:nrow(dev_stats)) {
dev_stats$roleNOC[j] <- sum(dev_stats$NOC[dev_stats$role==dev_stats$role[j]&dev_stats$month==dev_stats$month[j]])
}
# plot commits per type
print(ggplot(data=dev_stats, aes(x=month, y=roleNOC, group=role, colour=role))
+ geom_line(size=1.5)
+ scale_x_discrete(breaks = c("1998-01","1998-07","1999-01","1999-07","2000-01","2000-07","2001-01","2001-07","2002-01",
"2002-07","2003-01","2003-07","2004-01","2004-07","2005-01","2005-07","2006-01","2006-07",
"2007-01","2007-07","2008-01","2008-07","2009-01","2009-07","2010-01","2010-07","2011-01",
"2011-07","2012-01","2012-07","2013-01","2013-07","2014-01","2014-07","2015-01","2015-07",
"2016-01","2016-07","2017-01","2017-07"))
+ scale_y_continuous("number")
+ theme(text = element_text(size=18),axis.text.x = element_text(hjust = 1, size=18),axis.text.y = element_text(hjust = 1, size=18),
legend.text = element_text(size = 18),legend.title=element_blank())
+ theme(axis.text.x=element_text(angle=-270)))
#}
}
projects = c("tez")
#projects = c("zookeeper","xerces2-j","mahout","struts","kafka","cayenne","tika","ant-ivy","opennlp","pig","archiva","accumulo","tez","nutch","deltaspike","storm")
classifiers = c("knn3","rf")
error = data.frame("project"=character(), "classifier"=character(), "mr"=numeric(), stringsAsFactors = FALSE)
project_properties = data.frame("project"=character(), "commits"=numeric(), "ML_dev"=numeric(), "ML_user"=numeric(), stringsAsFactors = FALSE)
hmms_knn <- list()
hmms_rf <- list()
for( projectIndex in 1:length(projects)) {
project_sel = projects[projectIndex]
# perform query on DB to fetch only the selected project
query_str = paste('{"name" : ','"', project_sel,'"}', sep="")
project = con_project$find(query_str, fields='{"_id":1,"name":1}')
print(project)
# use the _id of the project to find the ID of the related version control system
query_str = paste('{"project_id" : {"$oid" : "', project$`_id`[1],'"}}', sep="")
vcssystem = con_vcssystem$find(query_str, fields='{"_id":1, "url":1}')
print(vcssystem)
# fetch all commits for the selected project
query_str = paste('{"vcs_system_id": {"$oid" : "', vcssystem$`_id`[1],'"}}',sep="")
commits = con_commit$find(query_str,fields ='{"_id":1,"author_date":1,"author_id":1,"committer_date":1,"committer_id":1,"labels":1,"linked_issue_ids":1,"message":1}')
# determine developer types
developers <- data.frame(commits$committer_date,commits$committer_id)
for (i in 1:nrow(developers)) {
developers$month[i] <- substr(developers$commits.committer_date[i],1,7)
}
for (i in 1:nrow(developers)) {
developers$NOC[i] <- sum(developers$month==developers$month[i]&developers$commits.committer_id==developers$commits.committer_id[i])
developers$commits[i] <- sum(developers$commits.committer_id==developers$commits.committer_id[i])
}
dev_stats <- developers[,c(2,3,4,5)]
dev_stats <- unique(dev_stats)
NOC <- nrow(commits)
for (i in 1:nrow(dev_stats)) {
if (dev_stats$commits[i]>=0.02*NOC&dev_stats$commits[i]<0.2*NOC){
dev_stats$role[i]<-"major"
}
else if (dev_stats$commits[i]>=0.2*NOC){
dev_stats$role[i]<-"core"
}
else {
dev_stats$role[i]<-"minor"
}
}
for (j in 1:nrow(dev_stats)) {
dev_stats$roleNOC[j] <- sum(dev_stats$NOC[dev_stats$role==dev_stats$role[j]&dev_stats$month==dev_stats$month[j]])
}
# plot commits per type
print(ggplot(data=dev_stats, aes(x=month, y=roleNOC, group=role, colour=role))
+ geom_line(size=1.5)
+ scale_x_discrete(breaks = c("1998-01","1998-07","1999-01","1999-07","2000-01","2000-07","2001-01","2001-07","2002-01",
"2002-07","2003-01","2003-07","2004-01","2004-07","2005-01","2005-07","2006-01","2006-07",
"2007-01","2007-07","2008-01","2008-07","2009-01","2009-07","2010-01","2010-07","2011-01",
"2011-07","2012-01","2012-07","2013-01","2013-07","2014-01","2014-07","2015-01","2015-07",
"2016-01","2016-07","2017-01","2017-07"))
+ scale_y_continuous("number")
+ theme(text = element_text(size=18),axis.text.x = element_text(hjust = 1, size=18),axis.text.y = element_text(hjust = 1, size=18),
legend.text = element_text(size = 18),legend.title=element_blank())
+ theme(axis.text.x=element_text(angle=-270)))
#}
}
projects = c("nutch")
#projects = c("zookeeper","xerces2-j","mahout","struts","kafka","cayenne","tika","ant-ivy","opennlp","pig","archiva","accumulo","tez","nutch","deltaspike","storm")
classifiers = c("knn3","rf")
error = data.frame("project"=character(), "classifier"=character(), "mr"=numeric(), stringsAsFactors = FALSE)
project_properties = data.frame("project"=character(), "commits"=numeric(), "ML_dev"=numeric(), "ML_user"=numeric(), stringsAsFactors = FALSE)
hmms_knn <- list()
hmms_rf <- list()
for( projectIndex in 1:length(projects)) {
project_sel = projects[projectIndex]
# perform query on DB to fetch only the selected project
query_str = paste('{"name" : ','"', project_sel,'"}', sep="")
project = con_project$find(query_str, fields='{"_id":1,"name":1}')
print(project)
# use the _id of the project to find the ID of the related version control system
query_str = paste('{"project_id" : {"$oid" : "', project$`_id`[1],'"}}', sep="")
vcssystem = con_vcssystem$find(query_str, fields='{"_id":1, "url":1}')
print(vcssystem)
# fetch all commits for the selected project
query_str = paste('{"vcs_system_id": {"$oid" : "', vcssystem$`_id`[1],'"}}',sep="")
commits = con_commit$find(query_str,fields ='{"_id":1,"author_date":1,"author_id":1,"committer_date":1,"committer_id":1,"labels":1,"linked_issue_ids":1,"message":1}')
# determine developer types
developers <- data.frame(commits$committer_date,commits$committer_id)
for (i in 1:nrow(developers)) {
developers$month[i] <- substr(developers$commits.committer_date[i],1,7)
}
for (i in 1:nrow(developers)) {
developers$NOC[i] <- sum(developers$month==developers$month[i]&developers$commits.committer_id==developers$commits.committer_id[i])
developers$commits[i] <- sum(developers$commits.committer_id==developers$commits.committer_id[i])
}
dev_stats <- developers[,c(2,3,4,5)]
dev_stats <- unique(dev_stats)
NOC <- nrow(commits)
for (i in 1:nrow(dev_stats)) {
if (dev_stats$commits[i]>=0.02*NOC&dev_stats$commits[i]<0.2*NOC){
dev_stats$role[i]<-"major"
}
else if (dev_stats$commits[i]>=0.2*NOC){
dev_stats$role[i]<-"core"
}
else {
dev_stats$role[i]<-"minor"
}
}
for (j in 1:nrow(dev_stats)) {
dev_stats$roleNOC[j] <- sum(dev_stats$NOC[dev_stats$role==dev_stats$role[j]&dev_stats$month==dev_stats$month[j]])
}
# plot commits per type
print(ggplot(data=dev_stats, aes(x=month, y=roleNOC, group=role, colour=role))
+ geom_line(size=1.5)
+ scale_x_discrete(breaks = c("1998-01","1998-07","1999-01","1999-07","2000-01","2000-07","2001-01","2001-07","2002-01",
"2002-07","2003-01","2003-07","2004-01","2004-07","2005-01","2005-07","2006-01","2006-07",
"2007-01","2007-07","2008-01","2008-07","2009-01","2009-07","2010-01","2010-07","2011-01",
"2011-07","2012-01","2012-07","2013-01","2013-07","2014-01","2014-07","2015-01","2015-07",
"2016-01","2016-07","2017-01","2017-07"))
+ scale_y_continuous("number")
+ theme(text = element_text(size=18),axis.text.x = element_text(hjust = 1, size=18),axis.text.y = element_text(hjust = 1, size=18),
legend.text = element_text(size = 18),legend.title=element_blank())
+ theme(axis.text.x=element_text(angle=-270)))
#}
}
print(ggplot(data=dev_stats, aes(x=month, y=roleNOC, group=role, colour=role))
+ geom_line(size=1.5)
+ scale_x_discrete(breaks = c("1998-01","1998-07","1999-01","1999-07","2000-01","2000-07","2001-01","2001-07","2002-01",
"2002-07","2003-01","2003-07","2004-01","2004-07","2005-01","2005-07","2006-01","2006-07",
"2007-01","2007-07","2008-01","2008-07","2009-01","2009-07","2010-01","2010-07","2011-01",
"2011-07","2012-01","2012-07","2013-01","2013-07","2014-01","2014-07","2015-01","2015-07",
"2016-01","2016-07","2017-01","2017-07"))
+ scale_y_continuous("number")
+ theme(text = element_text(size=18),axis.text.x = element_text(hjust = 1, size=18),axis.text.y = element_text(hjust = 1, size=18),
legend.text = element_text(size = 18),legend.title=element_blank())
+ theme(axis.text.x=element_text(angle=-270)))
print(ggplot(data=dev_stats, aes(x=month, y=roleNOC, group=role, colour=role))
+ geom_line(size=1.5)
+ scale_x_discrete(breaks = c("1998-01","1998-07","1999-01","1999-07","2000-01","2000-07","2001-01","2001-07","2002-01",
"2002-07","2003-01","2003-07","2004-01","2004-07","2005-01","2005-07","2006-01","2006-07",
"2007-01","2007-07","2008-01","2008-07","2009-01","2009-07","2010-01","2010-07","2011-01",
"2011-07","2012-01","2012-07","2013-01","2013-07","2014-01","2014-07","2015-01","2015-07",
"2016-01","2016-07","2017-01","2017-07"))
+ scale_y_continuous("number")
+ theme(text = element_text(size=18),axis.text.x = element_text(hjust = 1, size=18),axis.text.y = element_text(hjust = 1, size=18),
legend.text = element_text(size = 18),legend.title=element_blank())
+ scale_fill_manual(values=c("green", "blue"))
+ theme(axis.text.x=element_text(angle=-270)))
#}
print(ggplot(data=dev_stats, aes(x=month, y=roleNOC, group=role, colour=role))
+ geom_line(size=1.5)
+ scale_x_discrete(breaks = c("1998-01","1998-07","1999-01","1999-07","2000-01","2000-07","2001-01","2001-07","2002-01",
"2002-07","2003-01","2003-07","2004-01","2004-07","2005-01","2005-07","2006-01","2006-07",
"2007-01","2007-07","2008-01","2008-07","2009-01","2009-07","2010-01","2010-07","2011-01",
"2011-07","2012-01","2012-07","2013-01","2013-07","2014-01","2014-07","2015-01","2015-07",
"2016-01","2016-07","2017-01","2017-07"))
+ scale_y_continuous("number")
+ theme(text = element_text(size=18),axis.text.x = element_text(hjust = 1, size=18),axis.text.y = element_text(hjust = 1, size=18),
legend.text = element_text(size = 18),legend.title=element_blank())
+ scale_color_manual(values=c("green", "blue"))
+ theme(axis.text.x=element_text(angle=-270)))
print(ggplot(data=dev_stats, aes(x=month, y=roleNOC, group=role, colour=role))
+ geom_line(size=1.5)
+ scale_x_discrete(breaks = c("1998-01","1998-07","1999-01","1999-07","2000-01","2000-07","2001-01","2001-07","2002-01",
"2002-07","2003-01","2003-07","2004-01","2004-07","2005-01","2005-07","2006-01","2006-07",
"2007-01","2007-07","2008-01","2008-07","2009-01","2009-07","2010-01","2010-07","2011-01",
"2011-07","2012-01","2012-07","2013-01","2013-07","2014-01","2014-07","2015-01","2015-07",
"2016-01","2016-07","2017-01","2017-07"))
+ scale_y_continuous("number")
+ theme(text = element_text(size=18),axis.text.x = element_text(hjust = 1, size=18),axis.text.y = element_text(hjust = 1, size=18),
legend.text = element_text(size = 18),legend.title=element_blank())
+ scale_color_manual(values=c("#3399FF", "blue"))
+ theme(axis.text.x=element_text(angle=-270)))
print(ggplot(data=dev_stats, aes(x=month, y=roleNOC, group=role, colour=role))
+ geom_line(size=1.5)
+ scale_x_discrete(breaks = c("1998-01","1998-07","1999-01","1999-07","2000-01","2000-07","2001-01","2001-07","2002-01",
"2002-07","2003-01","2003-07","2004-01","2004-07","2005-01","2005-07","2006-01","2006-07",
"2007-01","2007-07","2008-01","2008-07","2009-01","2009-07","2010-01","2010-07","2011-01",
"2011-07","2012-01","2012-07","2013-01","2013-07","2014-01","2014-07","2015-01","2015-07",
"2016-01","2016-07","2017-01","2017-07"))
+ scale_y_continuous("number")
+ theme(text = element_text(size=18),axis.text.x = element_text(hjust = 1, size=18),axis.text.y = element_text(hjust = 1, size=18),
legend.text = element_text(size = 18),legend.title=element_blank())
+ scale_color_manual(values=c("#33FF00",#3399FF"))
+ theme(axis.text.x=element_text(angle=-270)))
print(ggplot(data=dev_stats, aes(x=month, y=roleNOC, group=role, colour=role))
+ geom_line(size=1.5)
+ scale_x_discrete(breaks = c("1998-01","1998-07","1999-01","1999-07","2000-01","2000-07","2001-01","2001-07","2002-01",
"2002-07","2003-01","2003-07","2004-01","2004-07","2005-01","2005-07","2006-01","2006-07",
"2007-01","2007-07","2008-01","2008-07","2009-01","2009-07","2010-01","2010-07","2011-01",
"2011-07","2012-01","2012-07","2013-01","2013-07","2014-01","2014-07","2015-01","2015-07",
"2016-01","2016-07","2017-01","2017-07"))
+ scale_y_continuous("number")
+ theme(text = element_text(size=18),axis.text.x = element_text(hjust = 1, size=18),axis.text.y = element_text(hjust = 1, size=18),
legend.text = element_text(size = 18),legend.title=element_blank())
+ scale_color_manual(values=c("#33FF00","#3399FF"))
+ theme(axis.text.x=element_text(angle=-270)))
#}
print(ggplot(data=dev_stats, aes(x=month, y=roleNOC, group=role, colour=role))
+ geom_line(size=1.5)
+ scale_x_discrete(breaks = c("1998-01","1998-07","1999-01","1999-07","2000-01","2000-07","2001-01","2001-07","2002-01",
"2002-07","2003-01","2003-07","2004-01","2004-07","2005-01","2005-07","2006-01","2006-07",
"2007-01","2007-07","2008-01","2008-07","2009-01","2009-07","2010-01","2010-07","2011-01",
"2011-07","2012-01","2012-07","2013-01","2013-07","2014-01","2014-07","2015-01","2015-07",
"2016-01","2016-07","2017-01","2017-07"))
+ scale_y_continuous("number")
+ theme(text = element_text(size=18),axis.text.x = element_text(hjust = 1, size=18),axis.text.y = element_text(hjust = 1, size=18),
legend.text = element_text(size = 18),legend.title=element_blank())
+ scale_color_manual(values=c("#33FF00","#3399FF"))
+ theme(axis.text.x=element_text(angle=-270)))
print(ggplot(data=dev_stats, aes(x=month, y=roleNOC, group=role, colour=role))
+ geom_line(size=1.5)
+ scale_x_discrete(breaks = c("1998-01","1998-07","1999-01","1999-07","2000-01","2000-07","2001-01","2001-07","2002-01",
"2002-07","2003-01","2003-07","2004-01","2004-07","2005-01","2005-07","2006-01","2006-07",
"2007-01","2007-07","2008-01","2008-07","2009-01","2009-07","2010-01","2010-07","2011-01",
"2011-07","2012-01","2012-07","2013-01","2013-07","2014-01","2014-07","2015-01","2015-07",
"2016-01","2016-07","2017-01","2017-07"))
+ scale_y_continuous("number")
+ theme(text = element_text(size=18),axis.text.x = element_text(hjust = 1, size=18),axis.text.y = element_text(hjust = 1, size=18),
legend.text = element_text(size = 18),legend.title=element_blank())
+ scale_color_manual(values=c("#00CC33","#3399FF"))
+ theme(axis.text.x=element_text(angle=-270)))
#}
projects = c("deltaspike")
#projects = c("zookeeper","xerces2-j","mahout","struts","kafka","cayenne","tika","ant-ivy","opennlp","pig","archiva","accumulo","tez","nutch","deltaspike","storm")
classifiers = c("knn3","rf")
error = data.frame("project"=character(), "classifier"=character(), "mr"=numeric(), stringsAsFactors = FALSE)
project_properties = data.frame("project"=character(), "commits"=numeric(), "ML_dev"=numeric(), "ML_user"=numeric(), stringsAsFactors = FALSE)
hmms_knn <- list()
hmms_rf <- list()
for( projectIndex in 1:length(projects)) {
project_sel = projects[projectIndex]
# perform query on DB to fetch only the selected project
query_str = paste('{"name" : ','"', project_sel,'"}', sep="")
project = con_project$find(query_str, fields='{"_id":1,"name":1}')
print(project)
# use the _id of the project to find the ID of the related version control system
query_str = paste('{"project_id" : {"$oid" : "', project$`_id`[1],'"}}', sep="")
vcssystem = con_vcssystem$find(query_str, fields='{"_id":1, "url":1}')
print(vcssystem)
# fetch all commits for the selected project
query_str = paste('{"vcs_system_id": {"$oid" : "', vcssystem$`_id`[1],'"}}',sep="")
commits = con_commit$find(query_str,fields ='{"_id":1,"author_date":1,"author_id":1,"committer_date":1,"committer_id":1,"labels":1,"linked_issue_ids":1,"message":1}')
# determine developer types
developers <- data.frame(commits$committer_date,commits$committer_id)
for (i in 1:nrow(developers)) {
developers$month[i] <- substr(developers$commits.committer_date[i],1,7)
}
for (i in 1:nrow(developers)) {
developers$NOC[i] <- sum(developers$month==developers$month[i]&developers$commits.committer_id==developers$commits.committer_id[i])
developers$commits[i] <- sum(developers$commits.committer_id==developers$commits.committer_id[i])
}
dev_stats <- developers[,c(2,3,4,5)]
dev_stats <- unique(dev_stats)
NOC <- nrow(commits)
for (i in 1:nrow(dev_stats)) {
if (dev_stats$commits[i]>=0.02*NOC&dev_stats$commits[i]<0.2*NOC){
dev_stats$role[i]<-"major"
}
else if (dev_stats$commits[i]>=0.2*NOC){
dev_stats$role[i]<-"core"
}
else {
dev_stats$role[i]<-"minor"
}
}
for (j in 1:nrow(dev_stats)) {
dev_stats$roleNOC[j] <- sum(dev_stats$NOC[dev_stats$role==dev_stats$role[j]&dev_stats$month==dev_stats$month[j]])
}
}
print(ggplot(data=dev_stats, aes(x=month, y=roleNOC, group=role, colour=role))
+ geom_line(size=1.5)
+ scale_x_discrete(breaks = c("1998-01","1998-07","1999-01","1999-07","2000-01","2000-07","2001-01","2001-07","2002-01",
"2002-07","2003-01","2003-07","2004-01","2004-07","2005-01","2005-07","2006-01","2006-07",
"2007-01","2007-07","2008-01","2008-07","2009-01","2009-07","2010-01","2010-07","2011-01",
"2011-07","2012-01","2012-07","2013-01","2013-07","2014-01","2014-07","2015-01","2015-07",
"2016-01","2016-07","2017-01","2017-07"))
+ scale_y_continuous("number")
+ theme(text = element_text(size=18),axis.text.x = element_text(hjust = 1, size=18),axis.text.y = element_text(hjust = 1, size=18),
legend.text = element_text(size = 18),legend.title=element_blank())
#+ scale_color_manual(values=c("#00CC33","#3399FF"))
+ theme(axis.text.x=element_text(angle=-270)))
#}
projects = c("storm")
#projects = c("zookeeper","xerces2-j","mahout","struts","kafka","cayenne","tika","ant-ivy","opennlp","pig","archiva","accumulo","tez","nutch","deltaspike","storm")
classifiers = c("knn3","rf")
error = data.frame("project"=character(), "classifier"=character(), "mr"=numeric(), stringsAsFactors = FALSE)
project_properties = data.frame("project"=character(), "commits"=numeric(), "ML_dev"=numeric(), "ML_user"=numeric(), stringsAsFactors = FALSE)
hmms_knn <- list()
hmms_rf <- list()
for( projectIndex in 1:length(projects)) {
project_sel = projects[projectIndex]
# perform query on DB to fetch only the selected project
query_str = paste('{"name" : ','"', project_sel,'"}', sep="")
project = con_project$find(query_str, fields='{"_id":1,"name":1}')
print(project)
# use the _id of the project to find the ID of the related version control system
query_str = paste('{"project_id" : {"$oid" : "', project$`_id`[1],'"}}', sep="")
vcssystem = con_vcssystem$find(query_str, fields='{"_id":1, "url":1}')
print(vcssystem)
# fetch all commits for the selected project
query_str = paste('{"vcs_system_id": {"$oid" : "', vcssystem$`_id`[1],'"}}',sep="")
commits = con_commit$find(query_str,fields ='{"_id":1,"author_date":1,"author_id":1,"committer_date":1,"committer_id":1,"labels":1,"linked_issue_ids":1,"message":1}')
# determine developer types
developers <- data.frame(commits$committer_date,commits$committer_id)
for (i in 1:nrow(developers)) {
developers$month[i] <- substr(developers$commits.committer_date[i],1,7)
}
for (i in 1:nrow(developers)) {
developers$NOC[i] <- sum(developers$month==developers$month[i]&developers$commits.committer_id==developers$commits.committer_id[i])
developers$commits[i] <- sum(developers$commits.committer_id==developers$commits.committer_id[i])
}
dev_stats <- developers[,c(2,3,4,5)]
dev_stats <- unique(dev_stats)
NOC <- nrow(commits)
for (i in 1:nrow(dev_stats)) {
if (dev_stats$commits[i]>=0.02*NOC&dev_stats$commits[i]<0.2*NOC){
dev_stats$role[i]<-"major"
}
else if (dev_stats$commits[i]>=0.2*NOC){
dev_stats$role[i]<-"core"
}
else {
dev_stats$role[i]<-"minor"
}
}
for (j in 1:nrow(dev_stats)) {
dev_stats$roleNOC[j] <- sum(dev_stats$NOC[dev_stats$role==dev_stats$role[j]&dev_stats$month==dev_stats$month[j]])
}
# plot commits per type
print(ggplot(data=dev_stats, aes(x=month, y=roleNOC, group=role, colour=role))
+ geom_line(size=1.5)
+ scale_x_discrete(breaks = c("1998-01","1998-07","1999-01","1999-07","2000-01","2000-07","2001-01","2001-07","2002-01",
"2002-07","2003-01","2003-07","2004-01","2004-07","2005-01","2005-07","2006-01","2006-07",
"2007-01","2007-07","2008-01","2008-07","2009-01","2009-07","2010-01","2010-07","2011-01",
"2011-07","2012-01","2012-07","2013-01","2013-07","2014-01","2014-07","2015-01","2015-07",
"2016-01","2016-07","2017-01","2017-07"))
+ scale_y_continuous("number")
+ theme(text = element_text(size=18),axis.text.x = element_text(hjust = 1, size=18),axis.text.y = element_text(hjust = 1, size=18),
legend.text = element_text(size = 18),legend.title=element_blank())
#+ scale_color_manual(values=c("#00CC33","#3399FF"))
+ theme(axis.text.x=element_text(angle=-270)))
#}
##########
}
#projects <- c("giraph","gora","directory-fotress-core","jspwiki","zookeeper","commons-collections","commons-io","commons-lang","nutch","deltaspike")
projects <- c("giraph")
setwd(paste("C:/Users/vhonsel/Documents/git/paper/ASE/SimSE_Data/",projects[j],"/empirical",sep=""))
paste("C:/Users/vhonsel/Documents/git/paper/ASE/SimSE_Data/",projects[j],"/empirical",sep="")
paste("C:/Users/vhonsel/Documents/git/paper/ASE/SimSE_Data/",projects[1],"/empirical",sep="")
for (j in 1:length(projects)) {
################# graph evolution ##################
setwd(paste("C:/Users/vhonsel/Documents/git/paper/ASE/SimSE_Data/",projects[j],"/empirical",sep=""))
noy <- length(list.files (pattern = "dot$"))
years <- c("01","02","03","04","05","06","07","08","09","10","11","12","13","14","15","16","17","18")
length(years) <- noy
for (i in 1:length(years)) {
dat = read.csv(paste("cc_",projects[j],"_",years[i],".csv", sep=""), header=FALSE)
adj_matrix = as.matrix(dat)
cc_graph <- graph_from_adjacency_matrix(adj_matrix,weighted=TRUE,mode="undirected")
n <- length(V(cc_graph))
e <- length(E(cc_graph))
d <- diameter(cc_graph, directed=F, weights=NA)
deg <- igraph::degree(cc_graph, v= V(cc_graph), mode="all")
av_deg <- sum(deg)/n
cl <- cluster_louvain(cc_graph,weights=E(cc_graph)$weight)
mod <- modularity(cl)
w_deg <- strength(cc_graph, mode="all")
av_w_deg <- sum(w_deg)/n
Communities <- length(cl)
#cluster_sizes <- sizes(cl)
den <- edge_density(cc_graph, loops = FALSE)
metrics <- list(project=projects[j], mode= "empirical", year = years[i], nodes=n, edges=e, diameter=d,
av_degree=av_deg, modularity=mod, av_w_degree=av_w_deg, communities=Communities, density = den)
results <- rbind(results,metrics,stringsAsFactors=FALSE)
#hist(deg, breaks =1:vcount(cc_graph)-1, main = "Histogram of node degree")
deg.dist <- degree_distribution(cc_graph, cumulative = T, mode="all")
#plot( x=0:max(deg), y=1-deg.dist, pch=19, cex=1.2, col="orange",xlab="Degree", ylab="Cumulative Frequency")
#plot(cl, cc_graph, vertex.label=NA)
}
}
library(sna)
library(igraph)
#projects <- c("giraph","gora","directory-fotress-core","jspwiki","zookeeper","commons-collections","commons-io","commons-lang","nutch","deltaspike")
projects <- c("giraph")
results <- data.frame(project=character(), mode=character(), year=character(), nodes=numeric(), edges=numeric(), diameter=numeric(),
av_degree=numeric(), modularity=numeric(), av_w_degree=numeric(), communities = numeric(), densitiy = numeric(),
stringsAsFactors = FALSE)
########## using adjacency matrices ###########
for (j in 1:length(projects)) {
################# graph evolution ##################
setwd(paste("C:/Users/vhonsel/Documents/git/paper/ASE/SimSE_Data/",projects[j],"/empirical",sep=""))
noy <- length(list.files (pattern = "dot$"))
years <- c("01","02","03","04","05","06","07","08","09","10","11","12","13","14","15","16","17","18")
length(years) <- noy
for (i in 1:length(years)) {
dat = read.csv(paste("cc_",projects[j],"_",years[i],".csv", sep=""), header=FALSE)
adj_matrix = as.matrix(dat)
cc_graph <- graph_from_adjacency_matrix(adj_matrix,weighted=TRUE,mode="undirected")
n <- length(V(cc_graph))
e <- length(E(cc_graph))
d <- diameter(cc_graph, directed=F, weights=NA)
deg <- igraph::degree(cc_graph, v= V(cc_graph), mode="all")
av_deg <- sum(deg)/n
cl <- cluster_louvain(cc_graph,weights=E(cc_graph)$weight)
mod <- modularity(cl)
w_deg <- strength(cc_graph, mode="all")
av_w_deg <- sum(w_deg)/n
Communities <- length(cl)
#cluster_sizes <- sizes(cl)
den <- edge_density(cc_graph, loops = FALSE)
metrics <- list(project=projects[j], mode= "empirical", year = years[i], nodes=n, edges=e, diameter=d,
av_degree=av_deg, modularity=mod, av_w_degree=av_w_deg, communities=Communities, density = den)
results <- rbind(results,metrics,stringsAsFactors=FALSE)
#hist(deg, breaks =1:vcount(cc_graph)-1, main = "Histogram of node degree")
deg.dist <- degree_distribution(cc_graph, cumulative = T, mode="all")
#plot( x=0:max(deg), y=1-deg.dist, pch=19, cex=1.2, col="orange",xlab="Degree", ylab="Cumulative Frequency")
#plot(cl, cc_graph, vertex.label=NA)
}
}
View(results)
setwd(paste("C:/Users/vhonsel/Documents/git/paper/ASE/SimSE_Data/",projects[j],"/simulation",sep=""))
paste("C:/Users/vhonsel/Documents/git/paper/ASE/SimSE_Data/",projects[j],"/simulation",sep="")
setwd(paste("C:/Users/vhonsel/Documents/git/paper/ASE/SimSE_Data/",projects[j],"/simulated",sep=""))
