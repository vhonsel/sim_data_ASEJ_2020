#av_w_degree
av_w_degree <- results_p[,c(2,3,9)]
empirical<-av_w_degree$av_w_degree[av_w_degree$mode=="empirical"]
predicted<-av_w_degree$av_w_degree[av_w_degree$mode=="project-specific simulation"]
predicted2<-av_w_degree$av_w_degree[av_w_degree$mode=="average simulation"]
MAE=MAE(predicted,empirical)
d = empirical-predicted
MSE = mean((d)^2)
RMSE=RMSE(predicted, empirical)
R2=R2(predicted, empirical, form = "traditional")
sim_error <- list(project=projects[i],mode="project-specific", metric="av_w_degree",MAE=MAE,MSE=MSE,RMSE=RMSE,R2=R2)
error <- rbind(error,sim_error,stringsAsFactors=FALSE)
MAE=MAE(predicted2,empirical)
d = empirical-predicted2
MSE = mean((d)^2)
RMSE=RMSE(predicted2, empirical)
R2=R2(predicted2, empirical, form = "traditional")
sim_error <- list(project=projects[i], mode="average",metric="av_w_degree",MAE=MAE,MSE=MSE,RMSE=RMSE,R2=R2)
error <- rbind(error,sim_error,stringsAsFactors=FALSE)
#modularity
modularity <- results_p[,c(2,3,8)]
empirical<-modularity$modularity[modularity$mode=="empirical"]
predicted<-modularity$modularity[modularity$mode=="project-specific simulation"]
predicted2<-modularity$modularity[modularity$mode=="average simulation"]
MAE=MAE(predicted,empirical)
d = empirical-predicted
MSE = mean((d)^2)
RMSE=RMSE(predicted, empirical)
R2=R2(predicted, empirical, form = "traditional")
sim_error <- list(project=projects[i], mode="project-specific", metric="modularity",MAE=MAE,MSE=MSE,RMSE=RMSE,R2=R2)
error <- rbind(error,sim_error,stringsAsFactors=FALSE)
MAE=MAE(predicted2,empirical)
d = empirical-predicted2
MSE = mean((d)^2)
RMSE=RMSE(predicted2, empirical)
R2=R2(predicted2, empirical, form = "traditional")
sim_error <- list(project=projects[i], mode="average",metric="modularity",MAE=MAE,MSE=MSE,RMSE=RMSE,R2=R2)
error <- rbind(error,sim_error,stringsAsFactors=FALSE)
#density
density <- results_p[,c(2,3,11)]
empirical<-density$density[density$mode=="empirical"]
predicted<-density$density[density$mode=="project-specific simulation"]
predicted2<-density$density[density$mode=="average simulation"]
MAE=MAE(predicted,empirical)
d = empirical-predicted
MSE = mean((d)^2)
RMSE=RMSE(predicted, empirical)
R2=R2(predicted, empirical, form = "traditional")
sim_error <- list(project=projects[i],mode="project-specific",metric="density",MAE=MAE,MSE=MSE,RMSE=RMSE,R2=R2)
error <- rbind(error,sim_error,stringsAsFactors=FALSE)
MAE=MAE(predicted2,empirical)
d = empirical-predicted2
MSE = mean((d)^2)
RMSE=RMSE(predicted2, empirical)
R2=R2(predicted2, empirical, form = "traditional")
sim_error <- list(project=projects[i], mode="average",metric="density",MAE=MAE,MSE=MSE,RMSE=RMSE,R2=R2)
error <- rbind(error,sim_error,stringsAsFactors=FALSE)
#diameter
diameter <- results_p[,c(2,3,6)]
empirical<-diameter$diameter[diameter$mode=="empirical"]
predicted<-diameter$diameter[diameter$mode=="project-specific simulation"]
predicted2<-diameter$diameter[diameter$mode=="average simulation"]
MAE=MAE(predicted,empirical)
d = empirical-predicted
MSE = mean((d)^2)
RMSE=RMSE(predicted, empirical)
R2=R2(predicted, empirical, form = "traditional")
sim_error <- list(project=projects[i],mode="project-specific",metric="diameter",MAE=MAE,MSE=MSE,RMSE=RMSE,R2=R2)
error <- rbind(error,sim_error,stringsAsFactors=FALSE)
MAE=MAE(predicted2,empirical)
d = empirical-predicted2
MSE = mean((d)^2)
RMSE=RMSE(predicted2, empirical)
R2=R2(predicted2, empirical, form = "traditional")
sim_error <- list(project=projects[i], mode="average",metric="diameter",MAE=MAE,MSE=MSE,RMSE=RMSE,R2=R2)
error <- rbind(error,sim_error,stringsAsFactors=FALSE)
#NOC
commits <- reshaped[,c(1,5)]
empirical <- unique(commits)
empirical <- empirical$commits
commits_sim <- reshaped_sim[,c(1,5)]
commits_sim <- commits_sim[commits_sim$commits!=0,]
commits_sim_av <- reshaped_sim_av[,c(1,5)]
commits_sim_av <- commits_sim_av[commits_sim_av$commits!=0,]
predicted <- unique(commits_sim)
predicted <- predicted$commits
predicted2 <- unique(commits_sim_av)
predicted2 <- predicted2$commits
MAE=MAE(predicted,empirical)
d = empirical-predicted
MSE = mean((d)^2)
RMSE=RMSE(predicted, empirical)
R2=R2(predicted, empirical, form = "traditional")
sim_error <- list(project=projects[i],mode="project-specific",metric="NOC",MAE=MAE,MSE=MSE,RMSE=RMSE,R2=R2)
error <- rbind(error,sim_error,stringsAsFactors=FALSE)
MAE=MAE(predicted2,empirical)
d = empirical-predicted2
MSE = mean((d)^2)
RMSE=RMSE(predicted2, empirical)
R2=R2(predicted2, empirical, form = "traditional")
sim_error <- list(project=projects[i], mode="average",metric="NOC",MAE=MAE,MSE=MSE,RMSE=RMSE,R2=R2)
error <- rbind(error,sim_error,stringsAsFactors=FALSE)
#NOF
nodes <- results_p[,c(2,3,4)]
empirical<-nodes$nodes[nodes$mode=="empirical"]
predicted<-nodes$nodes[nodes$mode=="project-specific simulation"]
predicted2<-nodes$nodes[nodes$mode=="average simulation"]
MAE=MAE(predicted,empirical)
d = empirical-predicted
MSE = mean((d)^2)
RMSE=RMSE(predicted, empirical)
R2=R2(predicted, empirical, form = "traditional")
sim_error <- list(project=projects[i], mode="project-specific", metric="NOF",MAE=MAE,MSE=MSE,RMSE=RMSE,R2=R2)
error <- rbind(error,sim_error,stringsAsFactors=FALSE)
MAE=MAE(predicted2,empirical)
d = empirical-predicted2
MSE = mean((d)^2)
RMSE=RMSE(predicted2, empirical)
R2=R2(predicted2, empirical, form = "traditional")
sim_error <- list(project=projects[i], mode="average",metric="NOF",MAE=MAE,MSE=MSE,RMSE=RMSE,R2=R2)
error <- rbind(error,sim_error,stringsAsFactors=FALSE)
}
# error boxplot
error <- na.omit(error)
error_graph <- error[error$metric!="NOC"&error$metric!="NOF",]
error_growth <- error[error$metric=="NOC"|error$metric=="NOF",]
#MAE
p<-ggplot(error_graph, aes(x=metric, y=MAE, fill=mode))+geom_boxplot()
print(p)
p<-ggplot(error_growth, aes(x=metric, y=MAE, fill=mode))+geom_boxplot()
print(p)
#MSE
p<-ggplot(error_graph, aes(x=metric, y=MSE, fill=mode))+geom_boxplot()+ylim(0,500)
print(p)
p<-ggplot(error_growth, aes(x=metric, y=MSE, fill=mode))+geom_boxplot()
print(p)
#RMSE
p<-ggplot(error_graph, aes(x=metric, y=RMSE, fill=mode))+geom_boxplot()
print(p)
p<-ggplot(error_growth, aes(x=metric, y=RMSE, fill=mode))+geom_boxplot()
print(p)
#R2
p<-ggplot(error_graph, aes(x=metric, y=R2, fill=mode))+geom_boxplot()
print(p)
p<-ggplot(error_growth, aes(x=metric, y=R2, fill=mode))+geom_boxplot()
print(p)
# long-term vs. short-term prediction
projects <- c("giraph")
for (j in 1:length(projects)) {
################# graph evolution ##################
setwd(paste("C:/Users/vhonsel/Documents/git/paper/ASE/SimSE_Data/",projects[j],"/simulated/snapshot",sep=""))
noy <- length(list.files (pattern = "dot$"))
years <- c("01","02","03","04","05","06","07","08","09","10","11","12","13","14","15","16","17","18")
length(years) <- noy
for (i in 1:length(years)) {
dat = read.csv(paste("cc_",projects[j],"_",years[i],".csv", sep=""), header=FALSE)
adj_matrix = as.matrix(dat)
cc_graph <- graph_from_adjacency_matrix(adj_matrix,weighted=TRUE,mode="undirected")
n <- length(V(cc_graph))
e <- length(E(cc_graph))
d <- diameter(cc_graph, directed=F, weights=NA)
deg <- igraph::degree(cc_graph, v= V(cc_graph), mode="all")
av_deg <- sum(deg)/n
cl <- cluster_louvain(cc_graph,weights=E(cc_graph)$weight)
mod <- modularity(cl)
w_deg <- strength(cc_graph, mode="all")
av_w_deg <- sum(w_deg)/n
Communities <- length(cl)
#cluster_sizes <- sizes(cl)
den <- edge_density(cc_graph, loops = FALSE)
metrics <- list(project=projects[j], mode= "snapshot", year = years[i], nodes=n, edges=e, diameter=d,
av_degree=av_deg, modularity=mod, av_w_degree=av_w_deg, communities=Communities, density = den)
results <- rbind(results,metrics,stringsAsFactors=FALSE)
#hist(deg, breaks =1:vcount(cc_graph)-1, main = "Histogram of node degree")
deg.dist <- degree_distribution(cc_graph, cumulative = T, mode="all")
#plot( x=0:max(deg), y=1-deg.dist, pch=19, cex=1.2, col="orange",xlab="Degree", ylab="Cumulative Frequency")
#plot(cl, cc_graph, vertex.label=NA)
}
}
for (i in 1:length(years)) {
edges = read.csv(paste("ChangeCoupling_Edges_", projects[j],"_",years[i],".csv", sep=""), header=TRUE)
nodes = read.csv(paste("ChangeCoupling_Nodes_",projects[j],"_",years[i],".csv", sep=""), header=TRUE)
cc_graph <- graph.data.frame(edges, directed=FALSE, vertices=nodes$Id)
n <- length(V(cc_graph))
e <- length(E(cc_graph))
d <- diameter(cc_graph, directed=F, weights=NA)
deg <- igraph::degree(cc_graph, v= V(cc_graph), mode="all")
av_deg <- sum(deg)/n
cl <- cluster_louvain(cc_graph,weights=E(cc_graph)$weight)
mod <- modularity(cl)
E(cc_graph)$weight <- edges$Weight
w_deg <- strength(cc_graph, mode="all")
av_w_deg <- sum(w_deg)/n
Communities <- length(cl)
#cluster_sizes <- sizes(cl)
den <- edge_density(cc_graph, loops = FALSE)
metrics <- list(project=projects[j], mode= "snapshot", year = years[i], nodes=n, edges=e, diameter=d,
av_degree=av_deg, modularity=mod, av_w_degree=av_w_deg, communities=Communities, density = den)
results <- rbind(results,metrics,stringsAsFactors=FALSE)
#hist(deg, breaks =1:vcount(cc_graph)-1, main = "Histogram of node degree")
deg.dist <- degree_distribution(cc_graph, cumulative = T, mode="all")
#plot( x=0:max(deg), y=1-deg.dist, pch=19, cex=1.2, col="orange",xlab="Degree", ylab="Cumulative Frequency")
}
}
View(results)
results_project <- results[results$project==projects[j],]
View(results_project)
nodes_plot <- ggplot(results_project, aes(year, nodes))
np <- nodes_plot + geom_line(aes(group=mode,color=mode),size=1.5)+ylim(0,max(results_project$nodes)+100)+theme_set(theme_gray(base_size = 20))
print(np)
edges_plot <- ggplot(results_project, aes(year, edges))
ep <- edges_plot + geom_line(aes(group=mode,color=mode),size=1.5)+ylim(0,max(results_project$edges)+1000)+theme_set(theme_gray(base_size = 20))
print(ep)
#ggsave(ep, file=paste(projects[j],"_edges.png"), path = savedir)
dev.off()
print(ep)
mod_plot <- ggplot(results_project, aes(year, modularity))
mp <- mod_plot + geom_line(aes(group=mode,color=mode),size=1.5)+ylim(0,1)+theme_set(theme_gray(base_size = 20))
print(mp)
dia_plot <- ggplot(results_project, aes(year, diameter))
dp <- dia_plot + geom_line(aes(group=mode,color=mode),size=1.5)+ylim(0,max(results_project$diameter)+1)+theme_set(theme_gray(base_size = 20))
print(dp)
deg_plot <- ggplot(results_project, aes(year, av_degree))
degp <- deg_plot + geom_line(aes(group=mode,color=mode),size=1.5)+ylim(0,max(results_project$av_degree)+10)+
ylab("average degree")+theme_set(theme_gray(base_size = 20))
print(degp)
wdeg_plot <- ggplot(results_project, aes(year, av_w_degree))
wp <- wdeg_plot + geom_line(aes(group=mode,color=mode),size=1.5)+ylim(0,max(results_project$av_w_degree)+10)+
ylab("average weighted degree")+theme_set(theme_gray(base_size = 20))
print(wp)
dens_plot <- ggplot(results_project, aes(year, density))
denp <- dens_plot + geom_line(aes(group=mode,color=mode),size=1.5)+ylim(0,1)+theme_set(theme_gray(base_size = 20))
print(denp)
sum_plot <- ggplot(NULL, aes(year, commits))
soc <- sum_plot +
geom_line(data = reshaped, aes(color="blue"), size=1.5) +
geom_line(data = reshaped_sim[reshaped_sim$model=="own model",], aes(color="green"), size=1.5) +
geom_line(data = reshaped_sim_av[reshaped_sim_av$model=="own model",], aes(color="red"), size=1.5)+
scale_color_discrete(name = "mode", labels = c("empirical", "project-specific sim.", "average sim."))+
theme_set(theme_gray(base_size = 20))
print(soc)
setwd(paste("C:/Users/vhonsel/Documents/git/paper/ASE/SimSE_Data/",projects[j],"/simulated/snapshot",sep=""))
commits_sim_ss <- read.delim(paste("sim_noc_",projects[j],".txt",sep=""), sep = ",", header=TRUE)
commits_sim_ss$year <- commits$year
commits_sim_ss$no <- NULL
reshaped_sim_ss <- melt(commits_sim_ss, id="year")
View(commits_sim_ss)
View(commits_sim_ss)
View(commits_sim_av)
View(commits_sim)
View(commits)
commits_sim_ss <- read.delim(paste("sim_noc_",projects[j],".txt",sep=""), sep = ",", header=TRUE)
View(commits_sim_ss)
print(np)
View(commits_sim_ss)
setwd(paste("C:/Users/vhonsel/Documents/git/paper/ASE/SimSE_Data/",projects[j],"/simulated/snapshot",sep=""))
commits_sim_ss <- read.delim(paste("sim_noc_",projects[j],".txt",sep=""), sep = ",", header=TRUE)
View(commits_sim_ss)
commits_sim_ss$year <- commits$year
View(commits_sim_ss)
View(commits_sim_ss)
reshaped_sim_ss <- melt(commits_sim_ss, id="no")
View(reshaped_sim_ss)
View(reshaped_sim)
View(reshaped_sim_ss)
reshaped_sim_ss[1] <- "year"
View(reshaped_sim_ss)
commits_sim_ss <- read.delim(paste("sim_noc_",projects[j],".txt",sep=""), sep = ",", header=TRUE)
commits_sim_ss$year <- commits$year
#commits_sim_ss$no <- NULL
reshaped_sim_ss <- melt(commits_sim_ss, id="no")
names(reshaped_sim_ss)[1] <- "year"
for (i in 1:nrow(reshaped_sim_ss)) {
reshaped_sim_ss$commits[i] <- sum(reshaped_sim_ss$value[reshaped_sim_ss$year[i]== reshaped_sim_ss$year & reshaped_sim_ss$model[i]==reshaped_sim_ss$model])
}
sum_plot <- ggplot(NULL, aes(year, commits))
soc <- sum_plot +
geom_line(data = reshaped, aes(color="blue"), size=1.5) +
geom_line(data = reshaped_sim[reshaped_sim$model=="own model",], aes(color="green"), size=1.5) +
geom_line(data = reshaped_sim_av[reshaped_sim_av$model=="own model",], aes(color="red"), size=1.5)+
geom_line(data = reshaped_sim_ss[reshaped_sim_ss$model=="own model",], aes(color="orange"), size=1.5)+
scale_color_discrete(name = "mode", labels = c("empirical", "project-specific sim.", "average sim.","snapshot sim."))+
theme_set(theme_gray(base_size = 20))
print(soc)
View(reshaped_sim_ss)
View(reshaped_sim)
for (i in 1:nrow(reshaped_sim_ss)) {
if (reshaped_sim_ss$variable[i] == "core" || reshaped_sim_ss$variable[i] == "peripheral") {
reshaped_sim_av$model[i] <- "onion model"
} else {
reshaped_sim_ss$model[i] <- "own model"
}
}
for (i in 1:nrow(reshaped_sim_ss)) {
reshaped_sim_ss$commits[i] <- sum(reshaped_sim_ss$value[reshaped_sim_ss$year[i]== reshaped_sim_ss$year & reshaped_sim_ss$model[i]==reshaped_sim_ss$model])
}
sum_plot <- ggplot(NULL, aes(year, commits))
soc <- sum_plot +
geom_line(data = reshaped, aes(color="blue"), size=1.5) +
geom_line(data = reshaped_sim[reshaped_sim$model=="own model",], aes(color="green"), size=1.5) +
geom_line(data = reshaped_sim_av[reshaped_sim_av$model=="own model",], aes(color="red"), size=1.5)+
geom_line(data = reshaped_sim_ss[reshaped_sim_ss$model=="own model",], aes(color="orange"), size=1.5)+
scale_color_discrete(name = "mode", labels = c("empirical", "project-specific sim.", "average sim.","snapshot sim."))+
theme_set(theme_gray(base_size = 20))
print(soc)
View(reshaped_sim_ss)
setwd(paste("C:/Users/vhonsel/Documents/git/paper/ASE/SimSE_Data/",projects[j],"/simulated/snapshot",sep=""))
commits_sim_ss <- read.delim(paste("sim_noc_",projects[j],".txt",sep=""), sep = ",", header=TRUE)
commits_sim_ss$year <- commits$year
#commits_sim_ss$no <- NULL
reshaped_sim_ss <- melt(commits_sim_ss, id="no")
names(reshaped_sim_ss)[1] <- "year"
for (i in 1:nrow(reshaped_sim_ss)) {
if (reshaped_sim_ss$variable[i] == "core" || reshaped_sim_ss$variable[i] == "peripheral") {
reshaped_sim_av$model[i] <- "onion model"
} else {
reshaped_sim_ss$model[i] <- "own model"
}
}
for (i in 1:nrow(reshaped_sim_ss)) {
reshaped_sim_ss$commits[i] <- sum(reshaped_sim_ss$value[reshaped_sim_ss$year[i]== reshaped_sim_ss$year & reshaped_sim_ss$model[i]==reshaped_sim_ss$model])
}
sum_plot <- ggplot(NULL, aes(year, commits))
soc <- sum_plot +
geom_line(data = reshaped, aes(color="blue"), size=1.5) +
geom_line(data = reshaped_sim[reshaped_sim$model=="own model",], aes(color="green"), size=1.5) +
geom_line(data = reshaped_sim_av[reshaped_sim_av$model=="own model",], aes(color="red"), size=1.5)+
geom_line(data = reshaped_sim_ss[reshaped_sim_ss$model=="own model",], aes(color="orange"), size=1.5)+
scale_color_discrete(name = "mode", labels = c("empirical", "project-specific sim.", "average sim.","snapshot sim."))+
theme_set(theme_gray(base_size = 20))
print(soc)
View(reshaped_sim_ss)
for (j in 1:length(projects)) {
################# graph evolution ##################
setwd(paste("C:/Users/vhonsel/Documents/git/paper/ASE/SimSE_Data/",projects[j],"/empirical",sep=""))
noy <- length(list.files (pattern = "dot$"))
years <- c("01","02","03","04","05","06","07","08","09","10","11","12","13","14","15","16","17","18")
length(years) <- noy
for (i in 1:length(years)) {
dat = read.csv(paste("cc_",projects[j],"_",years[i],".csv", sep=""), header=FALSE)
adj_matrix = as.matrix(dat)
cc_graph <- graph_from_adjacency_matrix(adj_matrix,weighted=TRUE,mode="undirected")
n <- length(V(cc_graph))
e <- length(E(cc_graph))
d <- diameter(cc_graph, directed=F, weights=NA)
deg <- igraph::degree(cc_graph, v= V(cc_graph), mode="all")
av_deg <- sum(deg)/n
cl <- cluster_louvain(cc_graph,weights=E(cc_graph)$weight)
mod <- modularity(cl)
w_deg <- strength(cc_graph, mode="all")
av_w_deg <- sum(w_deg)/n
Communities <- length(cl)
#cluster_sizes <- sizes(cl)
den <- edge_density(cc_graph, loops = FALSE)
metrics <- list(project=projects[j], mode= "empirical", year = years[i], nodes=n, edges=e, diameter=d,
av_degree=av_deg, modularity=mod, av_w_degree=av_w_deg, communities=Communities, density = den)
results <- rbind(results,metrics,stringsAsFactors=FALSE)
#hist(deg, breaks =1:vcount(cc_graph)-1, main = "Histogram of node degree")
deg.dist <- degree_distribution(cc_graph, cumulative = T, mode="all")
#plot( x=0:max(deg), y=1-deg.dist, pch=19, cex=1.2, col="orange",xlab="Degree", ylab="Cumulative Frequency")
#plot(cl, cc_graph, vertex.label=NA)
}
################# simulated graph evolution ##################
setwd(paste("C:/Users/vhonsel/Documents/git/paper/ASE/SimSE_Data/",projects[j],"/simulated/default",sep=""))
for (i in 1:length(years)) {
edges = read.csv(paste("ChangeCoupling_Edges_", projects[j],"_",years[i],".csv", sep=""), header=TRUE)
nodes = read.csv(paste("ChangeCoupling_Nodes_",projects[j],"_",years[i],".csv", sep=""), header=TRUE)
cc_graph <- graph.data.frame(edges, directed=FALSE, vertices=nodes$Id)
n <- length(V(cc_graph))
e <- length(E(cc_graph))
d <- diameter(cc_graph, directed=F, weights=NA)
deg <- igraph::degree(cc_graph, v= V(cc_graph), mode="all")
av_deg <- sum(deg)/n
cl <- cluster_louvain(cc_graph,weights=E(cc_graph)$weight)
mod <- modularity(cl)
E(cc_graph)$weight <- edges$Weight
w_deg <- strength(cc_graph, mode="all")
av_w_deg <- sum(w_deg)/n
Communities <- length(cl)
#cluster_sizes <- sizes(cl)
den <- edge_density(cc_graph, loops = FALSE)
metrics <- list(project=projects[j], mode= "project-specific simulation", year = years[i], nodes=n, edges=e, diameter=d,
av_degree=av_deg, modularity=mod, av_w_degree=av_w_deg, communities=Communities, density = den)
results <- rbind(results,metrics,stringsAsFactors=FALSE)
#hist(deg, breaks =1:vcount(cc_graph)-1, main = "Histogram of node degree")
deg.dist <- degree_distribution(cc_graph, cumulative = T, mode="all")
#plot( x=0:max(deg), y=1-deg.dist, pch=19, cex=1.2, col="orange",xlab="Degree", ylab="Cumulative Frequency")
}
setwd(paste("C:/Users/vhonsel/Documents/git/paper/ASE/SimSE_Data/",projects[j],"/simulated/average",sep=""))
for (i in 1:length(years)) {
edges = read.csv(paste("ChangeCoupling_Edges_", projects[j],"_",years[i],".csv", sep=""), header=TRUE)
nodes = read.csv(paste("ChangeCoupling_Nodes_",projects[j],"_",years[i],".csv", sep=""), header=TRUE)
cc_graph <- graph.data.frame(edges, directed=FALSE, vertices=nodes$Id)
n <- length(V(cc_graph))
e <- length(E(cc_graph))
d <- diameter(cc_graph, directed=F, weights=NA)
deg <- igraph::degree(cc_graph, v= V(cc_graph), mode="all")
av_deg <- sum(deg)/n
cl <- cluster_louvain(cc_graph,weights=E(cc_graph)$weight)
mod <- modularity(cl)
E(cc_graph)$weight <- edges$Weight
w_deg <- strength(cc_graph, mode="all")
av_w_deg <- sum(w_deg)/n
Communities <- length(cl)
#cluster_sizes <- sizes(cl)
den <- edge_density(cc_graph, loops = FALSE)
metrics <- list(project=projects[j], mode= "average simulation", year = years[i], nodes=n, edges=e, diameter=d,
av_degree=av_deg, modularity=mod, av_w_degree=av_w_deg, communities=Communities, density = den)
results <- rbind(results,metrics,stringsAsFactors=FALSE)
#hist(deg, breaks =1:vcount(cc_graph)-1, main = "Histogram of node degree")
deg.dist <- degree_distribution(cc_graph, cumulative = T, mode="all")
#plot( x=0:max(deg), y=1-deg.dist, pch=19, cex=1.2, col="orange",xlab="Degree", ylab="Cumulative Frequency")
}
# commit bahavior
setwd(paste("C:/Users/vhonsel/Documents/git/paper/ASE/SimSE_Data/",projects[j],"/empirical",sep=""))
commits <- read.csv(paste("NoC_",projects[j],".csv",sep=""), header=TRUE)
setwd(paste("C:/Users/vhonsel/Documents/git/paper/ASE/SimSE_Data/",projects[j],"/simulated/default",sep=""))
commits_sim <- read.delim(paste("sim_noc_",projects[j],".txt",sep=""), sep = ",", header=TRUE)
commits_sim$year <- commits$year
commits_sim$no <- NULL
setwd(paste("C:/Users/vhonsel/Documents/git/paper/ASE/SimSE_Data/",projects[j],"/simulated/average",sep=""))
commits_sim_av <- read.delim(paste("sim_noc_",projects[j],".txt",sep=""), sep = ",", header=TRUE)
commits_sim_av$year <- commits$year
commits_sim_av$no <- NULL
library(reshape2)
reshaped <- melt(commits, id="year")
reshaped_sim <- melt(commits_sim, id="year")
reshaped_sim_av <- melt(commits_sim_av, id="year")
for (i in 1:nrow(reshaped)) {
if (reshaped$variable[i] == "core" || reshaped$variable[i] == "peripheral") {
reshaped$model[i] <- "onion model"
} else {
reshaped$model[i] <- "own model"
}
}
for (i in 1:nrow(reshaped_sim)) {
if (reshaped_sim$variable[i] == "core" || reshaped_sim$variable[i] == "peripheral") {
reshaped_sim$model[i] <- "onion model"
} else {
reshaped_sim$model[i] <- "own model"
}
}
for (i in 1:nrow(reshaped_sim_av)) {
if (reshaped_sim_av$variable[i] == "core" || reshaped_sim_av$variable[i] == "peripheral") {
reshaped_sim_av$model[i] <- "onion model"
} else {
reshaped_sim_av$model[i] <- "own model"
}
}
for (i in 1:nrow(reshaped)) {
reshaped$commits[i] <- sum(reshaped$value[reshaped$year[i]== reshaped$year & reshaped$model[i]==reshaped$model])
}
for (i in 1:nrow(reshaped_sim)) {
reshaped_sim$commits[i] <- sum(reshaped_sim$value[reshaped_sim$year[i]== reshaped_sim$year & reshaped_sim$model[i]==reshaped_sim$model])
}
for (i in 1:nrow(reshaped_sim_av)) {
reshaped_sim_av$commits[i] <- sum(reshaped_sim_av$value[reshaped_sim_av$year[i]== reshaped_sim_av$year & reshaped_sim_av$model[i]==reshaped_sim_av$model])
}
savedir <- file.path("C:/Users/vhonsel/Documents/git/paper/ASE/results/")
}
sum_plot <- ggplot(NULL, aes(year, commits))
soc <- sum_plot +
geom_line(data = reshaped, aes(color="blue"), size=1.5) +
geom_line(data = reshaped_sim[reshaped_sim$model=="own model",], aes(color="green"), size=1.5) +
geom_line(data = reshaped_sim_av[reshaped_sim_av$model=="own model",], aes(color="red"), size=1.5)+
geom_line(data = reshaped_sim_ss[reshaped_sim_ss$model=="own model",], aes(color="orange"), size=1.5)+
scale_color_discrete(name = "mode", labels = c("empirical", "project-specific sim.", "average sim.","snapshot sim."))+
theme_set(theme_gray(base_size = 20))
print(soc)
setwd(paste("C:/Users/vhonsel/Documents/git/paper/ASE/SimSE_Data/",projects[j],"/simulated/snapshot",sep=""))
commits_sim_ss <- read.delim(paste("sim_noc_",projects[j],".txt",sep=""), sep = ",", header=TRUE)
commits_sim_ss$year <- commits$year
#commits_sim_ss$no <- NULL
reshaped_sim_ss <- melt(commits_sim_ss, id="no")
names(reshaped_sim_ss)[1] <- "year"
for (i in 1:nrow(reshaped_sim_ss)) {
if (reshaped_sim_ss$variable[i] == "core" || reshaped_sim_ss$variable[i] == "peripheral") {
reshaped_sim_av$model[i] <- "onion model"
} else {
reshaped_sim_ss$model[i] <- "own model"
}
}
for (i in 1:nrow(reshaped_sim_ss)) {
reshaped_sim_ss$commits[i] <- sum(reshaped_sim_ss$value[reshaped_sim_ss$year[i]== reshaped_sim_ss$year & reshaped_sim_ss$model[i]==reshaped_sim_ss$model])
}
sum_plot <- ggplot(NULL, aes(year, commits))
soc <- sum_plot +
geom_line(data = reshaped, aes(color="blue"), size=1.5) +
geom_line(data = reshaped_sim[reshaped_sim$model=="own model",], aes(color="green"), size=1.5) +
geom_line(data = reshaped_sim_av[reshaped_sim_av$model=="own model",], aes(color="red"), size=1.5)+
geom_line(data = reshaped_sim_ss[reshaped_sim_ss$model=="own model",], aes(color="orange"), size=1.5)+
scale_color_discrete(name = "mode", labels = c("empirical", "project-specific sim.", "average sim.","snapshot sim."))+
theme_set(theme_gray(base_size = 20))
print(soc)
View(reshaped_sim_ss)
setwd(paste("C:/Users/vhonsel/Documents/git/paper/ASE/SimSE_Data/",projects[j],"/simulated/snapshot",sep=""))
commits_sim_ss <- read.delim(paste("sim_noc_",projects[j],".txt",sep=""), sep = ",", header=TRUE)
commits_sim_ss$year <- commits$year
#commits_sim_ss$no <- NULL
reshaped_sim_ss <- melt(commits_sim_ss, id="no")
names(reshaped_sim_ss)[1] <- "year"
for (i in 1:nrow(reshaped_sim_ss)) {
if (reshaped_sim_ss$variable[i] == "core" || reshaped_sim_ss$variable[i] == "peripheral") {
reshaped_sim_ss$model[i] <- "onion model"
} else {
reshaped_sim_ss$model[i] <- "own model"
}
}
for (i in 1:nrow(reshaped_sim_ss)) {
reshaped_sim_ss$commits[i] <- sum(reshaped_sim_ss$value[reshaped_sim_ss$year[i]== reshaped_sim_ss$year & reshaped_sim_ss$model[i]==reshaped_sim_ss$model])
}
View(reshaped_sim_ss)
